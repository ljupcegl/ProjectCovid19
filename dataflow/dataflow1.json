{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceDataset_wx9",
						"type": "DatasetReference"
					},
					"name": "goalscorersCsv"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "ljupce_data_lake",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          date as string,",
				"          home_team as string,",
				"          away_team as string,",
				"          team as string,",
				"          scorer as string,",
				"          minute as string,",
				"          own_goal as string,",
				"          penalty as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> goalscorersCsv",
				"goalscorersCsv select(mapColumn(",
				"          date,",
				"          home_team,",
				"          away_team,",
				"          team",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 aggregate(groupBy(team),",
				"     goals = count(team)) ~> aggregate1",
				"select1, aggregate1 join(select1@team == aggregate1@team,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}